mvn clean install -DskipTests -Dcheckstyle.skip
sh docker_build.sh
docker-compose -f docker-compose_default.yaml up -d

docker stop $(docker ps -q)

docker inspect cocky_goldstine -f "{{json .NetworkSettings.Networks }}"
docker network disconnect bridge cocky_goldstine
docker network connect docker_default cocky_goldstine

vecka 8:
Lyckades få till tracing lokalt med microdonuts till jaeger och zipkin. Klonade teastore och försökte ändra i det men fick bara errors.
vecka 9:
Fick till en början inget att funka. Gick itne att kompilera. Senare fick jag till det genom att byta ner mig till java 8 men det tog fortfarande 100år att kompilera pga surefire tester. Kom senare på att man kunde köra utan det. Lyckades i slutet av veckan att kompilera och bygga dockerfiler av TeaStore.
I början så gick det itne att tracea över docker. Problemet låg i att det var två olika virituella nätverk de låg på. Mitt i veckan så försökte jag pusha till google container registry men det ville inte funka. Lyckades tillslut pusha till container repository på ett krångligt sätt och fixade ett script som kör allt och ett annat som tar ned allt. 

vecka 11: 
Måndag: Suttit och försök få jaeger och teastore att pratat med varan i clustret. Fick nästan till configmap för att göra det fortare.

21/4. Hittade JMeter och uppdaterade teastore till att kunna köra utan tracing.

timeStamp	elapsed	label	success	bytes	sentBytes	Latency
1587993899934	119	Home	true	8822	156	117
1587993900057	119	Login	true	10105	1039	63
1587993900177	196	List Products	true	118983	781	144
1587993900377	201	Look at Product	true	107926	769	180
1587993900579	156	Add Product to Cart	true	25417	1759	45
1587993900737	435	List Products with different page	true	118128	907	435
1587993901175	172	Add Product 2 to Cart	true	26117	2003	55
1587993901348	84	Logout	true	10479	1845	34

latency
throughput
minne, cpu osv via promethues nodeexporter och grafana
tx rx 


		  min,max,avg

CPU-Total 121%209%152 (20 1 10) nothing
CPU-Total 72%269%190% (20 1 10) nothing

CPU-Total 70%292%241% (20 1 10) jaeger
CPU-Total 80%281%224% (20 1 10) jaeger

java -jar ./bin/ApacheJMeter.jar -t teastore_browse_nogui.jmx -Jhostname $TEASTORE_WEBUI_SERVICE_HOST -Jport 8080 -JnumUser 30 -JrampUp 0 -Jthroughput 3000 -Jduration 15 -n

TEST HISTORY
1. bash taint.sh
2. sh startMonitoring.sh
3. Start grafana (5sec)
4. sh deployTeaStore.sh (No tracing)
5. sh deployJMeter.sh
6. sh exec.sh
7. mkdir results
8. rm teastore_browse_nogui.jmx
9. sh updateJMeter.sh
10. kubectl cp runTests.sh default/$(kubectl get pod -l "app=jmeter" -o jsonpath='{.items[0].metadata.name}'):/src/apache-jmeter-5.2.1/
11. sh runTests.sh
12. sh getResults.sh
13. Take results from grafana.
14. sh deployJaeger.sh
15. Change configmap to jaeger
16. sh updateTracer.sh
17. rm -rf results
18. mkdir results
19.


Test history 2.
1. bash taint.sh
2. sh startMonitoring.sh
3. Start grafana (5sec)
4. sh deployTeaStore.sh (No tracing)
5. sh deployJMeter.sh
6. sh exec.sh
7. mkdir results
8. rm teastore_browse_nogui.jmx
9. sh updateJMeter.sh
10. sh pushTestScriptToJMeter.sh
11. sh runTests.sh (nothing)
12. sh getResults.sh
13. Take results from grafana.
14. sh startCassandra.sh (jaeger)
15. sh deployJaeger.sh
16. Change configmap to jaeger
17. sh updateTracer.sh
18. rm -rf results
19. mkdir results
20. sh runTests.sh (jaeger)
21. sh getResults.sh
22. Take results from grafana.
23. sh deleteJaeger.sh
24. sh stopCassandra.sh (jaeger)
25. sh startCassandra.sh (zipkin)
26. sh deployZipkin.sh
27. Change configmap to zipkin
28. sh updateTracer.sh
29. rm -rf results
30. mkdir results
31. sh runTests.sh (zipkin)
32. sh getResults.sh
33. Take results from grafana.
34. exec into cassandra and it's 1.64 GiB.

